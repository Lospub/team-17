name: Android CI

# 当有代码推送或提交拉取请求时触发工作流
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        api-level: [30] # 指定Android API等级
        target: [default] # 模拟器目标
        abi: [x86] # 模拟器的ABI架构

    steps:
    # 步骤1：检查代码库
    - name: Checkout code
      uses: actions/checkout@v3

    # 步骤2：设置 JDK（用于 Gradle 构建）
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu' # 推荐的JDK发行版
        java-version: '11'   # Android通常使用Java 11

    # 步骤3：缓存 Gradle 依赖
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    # 步骤4：设置 Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: ${{ matrix.abi }}
        emulator-options: "-no-window -no-audio"

    # 步骤5：使用 Gradle 构建项目
    - name: Build with Gradle
      run: ./gradlew build

    # 步骤6：运行单元测试
    - name: Run Unit Tests
      run: ./gradlew test

    # 步骤7：在模拟器上运行 Android Instrumentation 测试
    - name: Start emulator
      run: |
        emulator -avd test -no-window -no-audio -no-boot-anim &
        adb wait-for-device
        adb shell input keyevent 82

    - name: Run Instrumentation Tests
      run: ./gradlew connectedAndroidTest

    - name: Stop emulator
      run: adb -s emulator-5554 emu kill
